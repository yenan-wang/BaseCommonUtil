apply plugin: 'maven-publish'
apply from: "${rootProject.projectDir}/template_gradle/publish_version.gradle"

task androidSourcesJar(type: Jar) {
    archiveClassifier = "sources"
    from android.sourceSets.main.java.srcDirs
}

publishing {
    def projectName = project.name
    publications {
        "$projectName"(MavenPublication) {
            artifact androidSourcesJar
            groupId = "com.ngb.wyn.base_util"
            version = getPublishVersion()
            artifactId = "$projectName"
            afterEvaluate {
                artifact(tasks.getByName("bundleReleaseAar"))
            }

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.api.allDependencies.each {
                    if (it.group != null && (it.name != null || "unspecified" == it.name) && it.version != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }

                configurations.implementation.allDependencies.each {
                    if (it.group != null && (it.name != null || "unspecified" == it.name) && it.version != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }

    repositories {
        maven {
            maven { url uri(getPublishUrl()) }
        }
    }

}

def getPublishVersion(){
    if (isPublishRemote.toBoolean()) {
        return PUBLISH_VERSION
    } else {
        return "0.0.1-LOCAL"
    }
}

def getPublishUrl() {
    if (isPublishRemote.toBoolean()) {
        return rootProject.projectDir
    } else {
        return "../repo"
    }
}